{"version":3,"sources":["audios/beef.mp3","imgs/angry.png","imgs/suspicious.png","imgs/basic.png","components/board/BoardTemplate.js","components/timer/TimerTemplate.js","components/decibel/RangeInput.js","components/decibel/AudioVisualiser.js","App.js","reportWebVitals.js","index.js","imgs/happy.png"],"names":["module","exports","__webpack_require__","p","BoardTemplateContainer","styled","div","_templateObject","Object","taggedTemplateLiteral","BoardTemplate","react_default","a","createElement","className","contentEditable","TimerTemplateContainer","TimerTemplate_templateObject","MinuteBtn","button","_templateObject2","ClockBtn","_templateObject3","TimerTemplate","audio","Audio","audioSrc","expiryTimestamp","useMemo","Date","_useState","useState","_useState2","slicedToArray","firstTime","setFirstTime","_useState3","_useState4","isStart","setIsStart","_useState5","_useState6","isPaused","setIsPaused","_useState7","_useState8","isAlarmStarted","setIsAlarmStarted","setSeconds","getSeconds","_useTimer","useTimer","onExpire","onReset","currentTime","seconds","minutes","hours","pause","days","isRunning","start","resume","restart","setMinute","number","current","setTime","getTime","play","onChange","e","_e$target","target","value","name","length","setTexts","objectSpread","texts","defineProperty","onBlur","hour","minute","second","setHours","getHours","parseInt","setMinutes","getMinutes","setIsFocused","onFocus","isFocused","_useState9","_useState10","_useState11","_useState12","onClick","type","String","padStart","console","log","InputTemplate","RangeInput_templateObject","RangeInput","_ref","sensitivity","record","localStorage","getItem","setValue","useEffect","ref","min","max","step","setItem","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","DecibelTemplateContainer","AudioVisualiser_templateObject","settings","AudioVisualiser_templateObject2","AudioVisualiser","audioData","volumeRefs","useRef","Array","alert","setAlert","prevTime","canvasRef","setAudio","getMicrophone","_ref2","asyncToGenerator","_callee","_context","navigator","mediaDevices","getUserMedia","video","apply","arguments","stopMicrophone","getTracks","track","toggleMicrophone","happy","src","setSrc","testRef","audioCtx","AudioContext","analyser","createAnalyser","fftSize","createMediaStreamSource","connect","data","Uint8Array","frequencyBinCount","ctx","getContext","width","height","intervalId","setInterval","getByteFrequencyData","dataParm","index","decibel","Math","floor","setTimeout","suspicious","angry","unshift","x","measureText","sliceWidth","lineWidth","strokeStyle","clearRect","beginPath","moveTo","_step","_iterator","_createForOfIteratorHelper","s","n","y","lineTo","f","stroke","draw","clearInterval","title","sleep","decibel_RangeInput","Container","App_templateObject","App","react_split_es","sizes","minSize","direction","style","timer_TimerTemplate","decibel_AudioVisualiser","board_BoardTemplate","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.0b8f4ec4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beef.b2da1f8e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/angry.e56d96c2.png\";","module.exports = __webpack_public_path__ + \"static/media/suspicious.d2a381e4.png\";","module.exports = __webpack_public_path__ + \"static/media/basic.c2f596fe.png\";","import React from 'react'\nimport styled from \"styled-components\";\n\n\n\nconst BoardTemplateContainer = styled.div`\n    background-color: gray;\n    .board{\n        margin: 10px;\n        padding: 10px;\n        height: 85%;\n        font-size: 40px;\n        color: white;\n        background-color: #497959;\n        border-radius: 10px;\n        border: #B78240 solid 10px;\n    }\n    h1 {\n        text-align: center;\n    }\n`\n\n\n\nconst BoardTemplate = () => {\n    return(\n        <BoardTemplateContainer >\n            <div className=\"board\" contentEditable>\n                <ul>\n                    <li>수학익힘책 풀기</li>\n                    <li>일기 쓰기</li>\n                </ul>\n            </div>\n        </BoardTemplateContainer>\n    )\n}\n\nexport default BoardTemplate;","import React, { useEffect } from 'react'\nimport styled from \"styled-components\";\nimport { useTimer } from 'react-timer-hook';\nimport { useState, useMemo } from 'react';\nimport audioSrc from '../../audios/beef.mp3';\n\nconst TimerTemplateContainer = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items:center;\n    overflow: hidden;\n    background: gray;\n    .btnWrapper {\n        min-width: 440px;\n        text-algin: center;\n    }\n    .btnWrapperBelow {\n        text-align: end;\n        margin-right: 10px;\n    }\n    .timeDisplay {\n        font-family: Gugi;\n        font-size: 15rem;\n        background: black;\n        padding: 1rem;\n        margin: 0.5rem;\n        border-radius: 20px;\n        color: white;\n        border: 10px solid white;\n        .caret {\n            caret-color: transparent;\n        }\n        input {\n            width: 270px;\n            height: 240px;\n            display: inline;\n            background-color: black;\n            border: none;\n            color: white;\n            font-size: 15rem;\n            font-family: Gugi;\n            border-radius: 20px;\n            outline: none;\n            \n        }\n        input::-webkit-outer-spin-button,\n        input::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            margin: 0;\n        }\n  \n        input[type=number] {\n            -moz-appearance: textfield;\n        }\n    }\n    .timeDisplayWrapper {\n        background: white;\n        border-radius: 20px;\n        padding-bottom: 10px;\n    }\n\n\n`\nconst MinuteBtn = styled.button`\n    align-self: center;\n    background-color: #fff;\n    background-image: none;\n    background-position: 0 90%;\n    background-repeat: repeat no-repeat;\n    background-size: 4px 3px;\n    border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\n    border-style: solid;\n    border-width: 2px;\n    box-shadow: rgba(0, 0, 0, .2) 15px 28px 25px -18px;\n    box-sizing: border-box;\n    color: #41403e;\n    cursor: pointer;\n    display: inline-block;\n    font-family: Noto Sans KR;\n    font-size: 2rem;\n    line-height: 23px;\n    outline: none;\n    padding: .75rem;\n    text-decoration: none;\n    transition: all 235ms ease-in-out;\n    border-bottom-left-radius: 15px 255px;\n    border-bottom-right-radius: 225px 15px;\n    border-top-left-radius: 255px 15px;\n    border-top-right-radius: 15px 225px;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    }\n    width: 100px;\n    margin: 10px;\n\n    &:hover {\n    box-shadow: rgba(0, 0, 0, .3) 2px 8px 8px -5px;\n    transform: translate3d(0, -2px, 0);\n    }\n\n    &:focus {\n    box-shadow: rgba(0, 0, 0, .3) 2px 8px 4px -6px;\n    }\n`\nconst ClockBtn = styled.button`\n    appearance: none;\n    background-color: #000000;\n    border: 2px solid #1A1A1A;\n    border-radius: 15px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: Roobert,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-size: 24px;\n    font-weight: 600;\n    line-height: normal;\n    margin: 0;\n    min-height: 60px;\n    min-width: 0;\n    outline: none;\n    padding: 12px 20px;\n    text-align: center;\n    text-decoration: none;\n    transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    will-change: transform;\n\n   \n    margin: 15px;\n    \n    &:disabled {\n    pointer-events: none;\n    }\n\n    &:hover {\n    box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;\n    transform: translateY(-2px);\n    }\n\n    &:active {\n    box-shadow: none;\n    transform: translateY(0);\n    }\n`\n\nfunction TimerTemplate() {\n    const audio = new Audio(audioSrc);\n    const expiryTimestamp = useMemo(()=> new Date(),[]);\n    \n    const [firstTime,setFirstTime] = useState(null);\n    const [isStart,setIsStart] = useState(false);\n    const [isPaused,setIsPaused] = useState(false);\n    const [isAlarmStarted,setIsAlarmStarted] = useState(false);\n    expiryTimestamp.setSeconds(expiryTimestamp.getSeconds());\n    const {\n      seconds,\n      minutes,\n      hours,\n      days,\n      isRunning,\n      start,\n      pause,\n      resume,\n      restart,\n    } = useTimer({expiryTimestamp, onExpire: () => {\n        if(isStart){\n            // setIsStart(false);\n            onReset();\n            audio.currentTime = 0;\n            setIsAlarmStarted(false);\n        } \n    }});\n\n \n\n    const setMinute = (number) => {\n        let current = new Date();\n        if(!isStart){\n            //아예 처음 클릭했을때와 그 다음 클릭했을때\n            if(!firstTime){\n                expiryTimestamp.setTime(current.getTime());\n            } else {\n                expiryTimestamp.setTime(expiryTimestamp.getTime() + current.getTime() - firstTime.getTime());\n            }\n            \n        }\n        setFirstTime(current);\n        expiryTimestamp.setSeconds(expiryTimestamp.getSeconds() + number);\n        restart(expiryTimestamp);\n        if(!isStart){\n            pause();\n        }\n    }\n    const onReset = () => {\n        let current = new Date();\n        expiryTimestamp.setTime(current.getTime());\n        setIsStart(false);\n        setFirstTime(null);\n        restart(expiryTimestamp);\n    }\n    const onStart = () => {\n        if(!firstTime || isStart){\n            return null;\n        }\n        let current = new Date();\n        expiryTimestamp.setTime(expiryTimestamp.getTime() + current.getTime() - firstTime.getTime());\n        setIsStart(true);\n        setFirstTime(current);\n        setIsPaused(false);\n        resume();\n    }\n    const onPause = () => {\n        if(!firstTime || isPaused){\n            console.log(firstTime, isPaused)\n            return null;\n        }\n        \n        let current = new Date();\n        expiryTimestamp.setTime(expiryTimestamp.getTime() - current.getTime() + firstTime.getTime());\n        \n        \n        setIsPaused(true);\n        setIsStart(false);\n        pause();\n    }\n    if(hours == 0 && minutes == 0 && seconds < 4 && !isAlarmStarted && isStart){\n        audio.play()\n        setIsAlarmStarted(true);\n    }\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        if(value.length <= 2){\n            setTexts({\n                ...texts,\n                [name]: value\n            });\n        }\n\n        \n    }\n    const onBlur = (e) => {\n        const { name } = e.target;\n        if(texts.hour != '' || texts.minute != '' || texts.second != ''){\n            if(name === 'hour'){\n                expiryTimestamp.setHours(expiryTimestamp.getHours() - parseInt(hours) * 1);\n                setMinute(texts.hour * 60 * 60);  \n            } else if(name === 'minute'){\n                expiryTimestamp.setMinutes(expiryTimestamp.getMinutes() - parseInt(minutes) * 1);\n                setMinute(texts.minute * 60);  \n            } else {\n                expiryTimestamp.setSeconds(expiryTimestamp.getSeconds() - parseInt(seconds) * 1);\n                setMinute(texts.second * 1);\n            }\n        }\n\n        \n        setIsFocused({\n            hour: false,\n            minute: false,\n            second: false\n        });\n        setTexts({\n            hour: '',\n            minute: '',\n            second: ''\n        });\n    }\n    const onFocus = (e) => {\n        const { name } = e.target;\n        if(!isStart){\n            setIsFocused({\n                ...isFocused,\n                [e.target.name]: true\n            })\n        }\n  \n    }\n    const [isFocused,setIsFocused] = useState({\n        hour: false,\n        minute: false,\n        second: false\n    });\n    const [texts,setTexts] = useState({\n        hour: '',\n        minute: '',\n        second: ''\n    });\n    return(\n        <TimerTemplateContainer>\n            <div className='btnWrapper'>\n                <MinuteBtn onClick={() => setMinute(1)}>1분</MinuteBtn>\n                <MinuteBtn onClick={() => setMinute(180)}>3분</MinuteBtn>\n                <MinuteBtn onClick={() => setMinute(300)}>5분</MinuteBtn>\n                <MinuteBtn onClick={() => setMinute(600)}>10분</MinuteBtn>\n                {/* <button onClick={() => console.log(expiryTimestamp)}>test</button> */}\n            </div>\n            <div className='timeDisplayWrapper'>\n                <div className=\"timeDisplay\">\n                    <input className={isStart ? 'caret' : null} type=\"number\" name=\"hour\" value={isFocused.hour ? texts.hour : String(hours).padStart(2,'0')} onFocus={onFocus} onBlur={onBlur} onChange={onChange}></input>:\n                    <input className={isStart ? 'caret' : null} type=\"number\" name=\"minute\" value={isFocused.minute ? texts.minute : String(minutes).padStart(2,'0')} onFocus={onFocus} onBlur={onBlur} onChange={onChange}></input>:\n                    <input className={isStart ? 'caret' : null} type=\"number\" name=\"second\" value={isFocused.second ? texts.second : String(seconds).padStart(2,'0')} onFocus={onFocus} onBlur={onBlur} onChange={onChange}></input>\n                </div>\n                <div className='btnWrapperBelow'>\n                    {isStart ? <ClockBtn onClick={onPause}>Pause</ClockBtn>  : <ClockBtn onClick={onStart}>start</ClockBtn> }\n                    <ClockBtn onClick={onReset}>reset</ClockBtn>\n                </div>\n            </div>\n            \n        </TimerTemplateContainer>\n    )\n}\n\n\n\nexport default TimerTemplate;","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst InputTemplate = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    input{\r\n        cursor: pointer;\r\n    }\r\n    opacity: 0.2;\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\n\r\n\r\n\r\nconst RangeInput = ({sensitivity}) => {\r\n    const record = localStorage.getItem('range');\r\n\r\n    const [value,setValue] = useState(3);\r\n    const onChange = (e) => {\r\n        setValue(e.target.value);\r\n        localStorage.setItem('range', e.target.value);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(record){\r\n            setValue(record);\r\n        }\r\n    },[value])\r\n    return(\r\n        <InputTemplate> \r\n            <input\r\n                type=\"range\" \r\n                value={value}\r\n                ref={sensitivity}\r\n                min=\"1.1\"\r\n                max=\"4.9\"\r\n                step=\"0.1\"\r\n                onChange={onChange}\r\n            />\r\n        </InputTemplate>\r\n    )\r\n}\r\n\r\n\r\nexport default RangeInput;","import React, { useEffect, useRef, useState } from 'react';\nimport styled from \"styled-components\";\nimport RangeInput from './RangeInput';\nimport angry from '../../imgs/angry.png';\nimport suspicious from '../../imgs/suspicious.png';\nimport sleep from '../../imgs/basic.png';\nimport happy from '../../imgs/happy.png';\n\n\nconst DecibelTemplateContainer = styled.div`\n    overflow: hidden;\n    display: flex;\n\n    justify-content: center;\n    // flex-direction: column;\n\n    .alertRecord {\n        cursor: pointer;\n        font-family: Noto Sans KR;\n        text-align: center;\n        margin-bottom: 0;\n    }\n    .decibel_menu_container {\n        display: flex;\n        justify-content: end;\n        .decibel_menu_wrapper {\n            margin: 0 20px 0 0;\n\n        }\n    }\n    .decibel_start_btn {\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    img {\n        display: block;\n        margin:  10px auto;\n    }\n\n`\nconst SpaceDiv = styled.div`\n    width: 300px;\n    height: 150px;\n    display: block;\n`\n\nconst settings = {\n    bars: 30,\n    spacing: 6,\n    width: 10,\n    height: 200\n  };\n\nconst AudioVisualiser = ({audioData}) => {\n    const volumeRefs = useRef(new Array(settings.bars));\n    const [alert,setAlert] = useState(0);\n    const sensitivity = useRef(0);\n    const prevTime = useRef(true);\n    const [test,setTest] = useState(0);\n    const canvasRef = useRef(null);\n    const [audio,setAudio] = useState(null);\n    // 오디오 미디어 스트림 가져오고 스테이트에 저장\n    const getMicrophone = async () => {\n        const audio = await navigator.mediaDevices.getUserMedia({\n            audio: true,\n            video: false\n        });\n        setAudio(audio);\n    }\n    // 오디오 미디어 스트림 중지\n    const stopMicrophone = () => {\n        audio.getTracks().forEach(track => track.stop());\n        setAudio(null);\n    }\n    const toggleMicrophone = () => {\n        if(audio){\n            stopMicrophone();\n        } else {\n            getMicrophone();\n        }\n    }\n    const [src,setSrc] = useState(happy);\n    const testRef = useRef(1);\n\n\n    useEffect(()=>{\n        if(audio){\n            try {\n                const audioCtx = new AudioContext();\n                const analyser = audioCtx.createAnalyser();\n                analyser.fftSize = 2048;\n                const audioSrc = audioCtx.createMediaStreamSource(audio);\n                audioSrc.connect(analyser);\n                const data = new Uint8Array(analyser.frequencyBinCount);\n                \n\n                const ctx = canvasRef.current.getContext('2d');\n\n                canvasRef.current.width = 500;\n                canvasRef.current.height = 500;\n                \n\n                const cw = canvasRef.current.width / 2;\n                const ch = canvasRef.current.height / 2;\n\n                // 그릴 텍스트의 넓이 구하기\n                \n\n                \n                \n\n\n                const draw = dataParm => {\n                    let e = 0\n                    for (let index = 0; index < 512; index++) {\n                        e += dataParm[index];\n                    }\n                    const decibel = Math.floor((e/512)*sensitivity.current.value*0.3);\n                    if(decibel<=50){\n                        testRef.current = 1\n                    } else if(decibel <= 100){\n                        testRef.current = 2\n                    } else {\n                        testRef.current = 3\n                    }\n                    \n                    if(prevTime.current && decibel > 100){\n                        setAlert(prev => prev+1);\n                        prevTime.current = false;\n                        setTimeout(()=>{\n                            prevTime.current = true;\n                        }, 5000);\n                    }\n                    if(testRef.current==1){\n                        setSrc(happy);\n                    } else if(testRef.current==2){\n                        setSrc(suspicious);\n                    } else {\n                        setSrc(angry);\n                    }\n                    \n                    // test\n                    volumeRefs.current.unshift(decibel);\n                    volumeRefs.current.pop();\n                    console.log(volumeRefs.current)\n                    // 300\n                    const height = canvasRef.current.height/2;\n                    // 150\n                    const width = canvasRef.current.width;\n\n                    const textWidth = ctx.measureText(decibel).width;\n                    let x = 0\n                    const sliceWidth = (width)/30;\n                    ctx.lineWidth = 2;\n                    ctx.strokeStyle = '#000000';\n                    ctx.clearRect(0, 0, width, height*2);\n                    ctx.beginPath();\n                    ctx.moveTo(0,volumeRefs.current[-1]);\n                    for (const item of volumeRefs.current) {\n                        const y = item;\n                        ctx.lineTo(x, (-y+300));\n                        x += sliceWidth;\n                      }\n                      ctx.lineTo(x,volumeRefs.current[-1]);\n                      ctx.stroke();\n\n                    // ctx.fillStyle = 'white';\n                    // ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n                    // ctx.fillStyle = 'black';\n                    // ctx.font = 'bold 100px Arial';\n                    // ctx.fillText(\n                    //     decibel,\n                    //     cw - (textWidth / 2),\n                    //     ch + 30\n                    //     );\n          \n                    // ctx.fill();\n\n                };\n                const intervalId = setInterval(()=>{\n                    analyser.getByteFrequencyData(data);\n                    draw(data);\n                  },10);\n                  return () => {\n                    clearInterval(intervalId);\n                  }\n            } catch(e) {\n                throw(500, e);\n            }\n        }\n        return () => stopMicrophone;\n    },[audio])\n\n\n    return(\n        <DecibelTemplateContainer>\n            <div className='decibel_start_btn'>\n                {audio \n                    ? <canvas ref={canvasRef} onClick={toggleMicrophone}/> \n                    :<button onClick={toggleMicrophone}>\n                        소음측정기 시작\n                    </button>\n                }\n            </div>\n            <div className='decibel_menu_container'>\n                <div className=\"decibel_menu_wrapper\">\n                    <p \n                        title=\"클릭하여 삭제\"\n                        className=\"alertRecord\"\n                        onClick={()=> setAlert(0)}\n                    >\n                            시끄러웠던 횟수: {alert}\n                    </p>\n                    <div>\n                        {audio \n                            ? <img src={src} width='100px' height='100px' /> \n                            : <img src={sleep} width='100px' height='100px' />\n                        }\n                    </div>\n                    <RangeInput sensitivity={sensitivity}/>\n                    \n                </div>\n            </div>\n\n           \n            \n\n        </DecibelTemplateContainer>\n    )\n}\n\nexport default AudioVisualiser;\n\n\n\n\n","import React from 'react'\nimport Split from 'react-split';\nimport styled from 'styled-components';\nimport BoardTemplate from './components/board/BoardTemplate';\nimport TimerTemplate from './components/timer/TimerTemplate';\nimport AudioVisualiser from './components/decibel/AudioVisualiser';\nimport './App.css';\n\nconst Container = styled.div`\n  /* min-width: 1024px; */\n  height: 100%;\n`\n\n\nfunction App(){\n\n  return (\n    <Container>\n      <Split\n        className='flex'\n        sizes={[100,0]}\n        minSize={0}\n      >\n            <Split\n              direction='vertical'\n              style={{height: '100vh'}}\n              sizes={[70,30]}\n              minSize={0}\n            >\n              <TimerTemplate/>\n              <AudioVisualiser />\n            </Split>\n            <BoardTemplate />\n      </Split>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n    <App />\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/happy.9d69d99b.png\";"],"sourceRoot":""}