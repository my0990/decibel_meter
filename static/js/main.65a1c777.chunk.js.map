{"version":3,"sources":["components/board/BoardTemplate.js","components/timer/TimerTemplate.js","components/decibel/audioTest.js","components/decibel/AudioContainer.js","components/decibel/DecibelTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["BoardTemplateContainer","styled","div","_templateObject","Object","taggedTemplateLiteral","BoardTemplate","react_default","a","createElement","className","contentEditable","TimerTemplateContainer","TimerTemplate_templateObject","TimerTemplate","expiryTimestamp","useMemo","Date","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","firstTime","setFirstTime","setSeconds","getSeconds","_useTimer","useTimer","onExpire","isStart","setIsStart","seconds","minutes","hours","pause","days","isRunning","start","resume","restart","_useState5","_useState6","_useState7","_useState8","isPaused","setIsPaused","_useState9","_useState10","setMinute","number","current","setTime","getTime","style","fontSize","String","padStart","onClick","console","log","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AudioTest","word","setWord","analyserCanvas","useRef","mediaStream","options","video","audio","useEffect","_enableStream","asyncToGenerator","_callee","stream","audioCtx","analyser","data","ctx","count","draw","loopingFunction","_context","navigator","mediaDevices","getUserMedia","AudioContext","createAnalyser","fftSize","createMediaStreamSource","connect","Uint8Array","frequencyBinCount","getContext","height","window","innerHeight","width","innerWidth","dataParm","toConsumableArray","fillStyle","fillRect","lineWidth","strokeStyle","volumn","Math","max","apply","requestAnimationFrame","getByteFrequencyData","t0","arguments","getTracks","track","enableStream","ref","textAlign","Container","AudioContainer_templateObject","AudioContainer","audioTest","DecibelTemplateContainer","DecibelTemplate_templateObject","DecibelTemplate","decibel_AudioContainer","App_templateObject","App","App_Container","react_split_es","sizes","minSize","direction","timer_TimerTemplate","decibel_DecibelTemplate","board_BoardTemplate","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.65a1c777.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\nconst BoardTemplateContainer = styled.div`\r\n    background-color: gray;\r\n    .board{\r\n        margin: 10px;\r\n        padding: 10px;\r\n        height: 85%;\r\n        font-size: 40px;\r\n        color: white;\r\n        background-color: #497959;\r\n        border-radius: 10px;\r\n        border: #B78240 solid 10px;\r\n    }\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\n\r\n\r\nconst BoardTemplate = () => {\r\n    return(\r\n        <BoardTemplateContainer >\r\n            <h1>판서</h1>\r\n            <div className=\"board\" contentEditable>\r\n                Pure Chalk Board\r\n            </div>\r\n        </BoardTemplateContainer>\r\n    )\r\n}\r\n\r\nexport default BoardTemplate;","import React, { useEffect } from 'react'\r\nimport styled from \"styled-components\";\r\nimport { useTimer } from 'react-timer-hook';\r\nimport { useState, useMemo } from 'react';\r\n\r\nconst TimerTemplateContainer = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items:center;\r\n    overflow: hidden;\r\n    \r\n`\r\n\r\nfunction TimerTemplate() {\r\n\r\n    const expiryTimestamp = useMemo(()=> new Date(),[]);\r\n    const [pausedTime,setPausedTime] = useState(null);\r\n    const [firstTime,setFirstTime] = useState(null);\r\n    expiryTimestamp.setSeconds(expiryTimestamp.getSeconds());\r\n    const {\r\n      seconds,\r\n      minutes,\r\n      hours,\r\n      days,\r\n      isRunning,\r\n      start,\r\n      pause,\r\n      resume,\r\n      restart,\r\n    } = useTimer({expiryTimestamp, onExpire: () => {\r\n        if(isStart){\r\n            setIsStart(false);\r\n        }\r\n    }});\r\n\r\n    const [isStart,setIsStart] = useState(false);\r\n    const [isPaused,setIsPaused] = useState(false);\r\n    const [firstClick,setFirstClick] = useState(null);\r\n    const setMinute = (number) => {\r\n        let current = new Date();\r\n        if(!isStart){\r\n            //아예 처음 클릭했을때와 그 다음 클릭했을때\r\n            if(!firstTime){\r\n                expiryTimestamp.setTime(current.getTime());\r\n            } else {\r\n                expiryTimestamp.setTime(expiryTimestamp.getTime() + current.getTime() - firstTime.getTime());\r\n            }\r\n            \r\n        }\r\n        setFirstTime(current);\r\n        expiryTimestamp.setSeconds(expiryTimestamp.getSeconds() + number);\r\n        restart(expiryTimestamp);\r\n        if(!isStart){\r\n            pause();\r\n        }\r\n    }\r\n    const onReset = () => {\r\n        let current = new Date();\r\n        expiryTimestamp.setTime(current.getTime());\r\n        setIsStart(false);\r\n        setFirstTime(null);\r\n        restart(expiryTimestamp);\r\n    }\r\n    const onStart = () => {\r\n        if(!firstTime || isStart){\r\n            return null;\r\n        }\r\n        let current = new Date();\r\n        expiryTimestamp.setTime(expiryTimestamp.getTime() + current.getTime() - firstTime.getTime());\r\n        setIsStart(true);\r\n        setFirstTime(current);\r\n        setIsPaused(false);\r\n        resume();\r\n    }\r\n    const onPause = () => {\r\n        if(!firstTime || isPaused){\r\n            console.log(firstTime, isPaused)\r\n            return null;\r\n        }\r\n        \r\n        let current = new Date();\r\n        expiryTimestamp.setTime(expiryTimestamp.getTime() - current.getTime() + firstTime.getTime());\r\n        \r\n        \r\n        setIsPaused(true);\r\n        setIsStart(false);\r\n        pause();\r\n    }\r\n\r\n\r\n    return(\r\n        <TimerTemplateContainer>\r\n            <div style={{fontSize: '100px'}} className=\"timeDisplay\">\r\n                <span>{String(hours).padStart(2,'0')}</span>:<span>{String(minutes).padStart(2,'0')}</span>:<span>{String(seconds).padStart(2,'0')}</span>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <button onClick={() => setMinute(60)}>1분</button>\r\n                    <button onClick={() => setMinute(180)}>3분</button>\r\n                    <button onClick={() => setMinute(300)}>5분</button>\r\n                    <button onClick={() => setMinute(600)}>10분</button>\r\n                </div>\r\n                {/* <button onClick={() => console.log(expiryTimestamp)}>test</button> */}\r\n            </div>\r\n            <div>\r\n                <button onClick={onStart}>start</button> \r\n                <button onClick={onPause}>Pause</button> \r\n                <button onClick={onReset}>reset</button>\r\n            </div>\r\n        </TimerTemplateContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TimerTemplate;","import React from \"react\";\r\nimport { useRef,useState, useEffect, useCallback } from \"react\";\r\n\r\nconst AudioTest = () => {\r\n    const [word,setWord] = useState('조용하다');\r\n    const analyserCanvas = useRef(null);\r\n    const [mediaStream, setMediaStream] = useState(null);\r\n    const options = {\r\n        video: false,\r\n        audio: true,\r\n      };\r\n\r\n    useEffect(()=>{\r\n        async function enableStream() {\r\n            try{\r\n                const stream =  await navigator.mediaDevices.getUserMedia(options);\r\n                const audioCtx = new AudioContext();\r\n                const analyser = audioCtx.createAnalyser();\r\n                analyser.fftSize = 2048;\r\n                const audioSrc = audioCtx.createMediaStreamSource(stream);\r\n                audioSrc.connect(analyser);\r\n                const data = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n                \r\n                const ctx = analyserCanvas.current.getContext('2d');\r\n                let count = 1;\r\n                analyserCanvas.height = window.innerHeight;\r\n                analyserCanvas.width = window.innerWidth;\r\n                const draw = dataParm => {\r\n                  dataParm = [...dataParm];\r\n                  \r\n                  if(count==1){\r\n                    console.log(dataParm);\r\n                    count++;\r\n                  }\r\n                  ctx.fillStyle = 'white';\r\n                  ctx.fillRect(0,0,analyserCanvas.current.width,analyserCanvas.current.height)\r\n                  ctx.lineWidth = 2;\r\n                  ctx.strokeStyle = 'blue';\r\n                  const space = analyserCanvas.current.width / dataParm.length;\r\n                  // console.log((Math.max(...dataParm)));\r\n                  // useCallback(() => setNoise(Math.max(...dataParm)),[]);\r\n                  // setNoise(Math.max(...dataParm));\r\n                  let volumn = Math.max(...dataParm);\r\n                  if( 100 < volumn && volumn < 200){\r\n                    setWord('조금 시끄럽다');\r\n                  } else if(volumn >= 200){\r\n                    setWord('시끄럽다');\r\n                  } else {\r\n                    setWord('조용하다');\r\n                  }\r\n                  \r\n                  // dataParm.forEach((value, i) => {\r\n                    \r\n                  //   ctx.beginPath();\r\n                  //   ctx.moveTo(space * i, analyserCanvas.current.height);\r\n                  //   ctx.lineTo(space * i, analyserCanvas.current.height - value*0.5);\r\n                  //   ctx.stroke();\r\n                  // }\r\n                  // );\r\n                };\r\n\r\n                const loopingFunction = () => {\r\n                  requestAnimationFrame(loopingFunction);\r\n                  analyser.getByteFrequencyData(data);\r\n                  draw(data);\r\n                };\r\n\r\n                requestAnimationFrame(loopingFunction);\r\n              } catch(err){\r\n                throw(500,err);\r\n              }\r\n        }\r\n        if (!mediaStream) {\r\n            enableStream();\r\n        } else {\r\n            return function cleanup() {\r\n                mediaStream.getTracks().forEach(track => {\r\n                    track.stop();\r\n                });\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <canvas ref={analyserCanvas}></canvas>\r\n        <h2 style={{textAlign:\"center\"}}>\r\n          {word}\r\n        </h2>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AudioTest;\r\n ","import AudioTest from \"./audioTest\";\r\nimport styled from \"styled-components\";\r\nimport {useState} from \"react\";\r\nimport React from \"react\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`\r\n\r\nconst AudioContainer = () => {\r\n    return(\r\n        <Container>\r\n            <h1>우리반 소음측정기</h1>\r\n            <AudioTest />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AudioContainer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AudioContainer from \"./AudioContainer\";\r\n\r\nconst DecibelTemplateContainer = styled.div`\r\n    overflow: hidden;\r\n    h1 {margin: 0}\r\n`\r\n\r\nconst DecibelTemplate = () => {\r\n    return(\r\n        <DecibelTemplateContainer>\r\n            <h1>데시벨</h1>\r\n            <AudioContainer />\r\n        </DecibelTemplateContainer>\r\n    )\r\n}\r\n\r\nexport default DecibelTemplate;","import React from 'react'\r\nimport Split from 'react-split';\r\nimport styled from 'styled-components';\r\nimport BoardTemplate from './components/board/BoardTemplate';\r\nimport TimerTemplate from './components/timer/TimerTemplate';\r\nimport DecibelTemplate from './components/decibel/DecibelTemplate';\r\nimport './App.css';\r\n\r\nconst Container = styled.div`\r\n  /* min-width: 1024px; */\r\n\r\n  height: 100%;\r\n`\r\n\r\n\r\nfunction App(){\r\n\r\n  return (\r\n    <Container>\r\n      <Split\r\n        className='flex'\r\n        sizes={[100,0]}\r\n        minSize={300}\r\n      >\r\n            <Split\r\n              direction='vertical'\r\n              style={{height: '100vh'}}\r\n              sizes={[70,30]}\r\n              minSize={10}\r\n            >\r\n              <TimerTemplate/>\r\n              <DecibelTemplate />\r\n            </Split>\r\n            <BoardTemplate />\r\n      </Split>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}